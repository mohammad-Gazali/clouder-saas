generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id    String @id @unique // this id will be the same as kinde id, so we didn't provide id field with default value or autoicrement
  email String @unique

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  files File[]
  notes Note[]
}

model File {
  id           String       @id @default(cuid())
  name         String
  url          String
  key          String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  notes  Note[]
}

model Note {
  id            String   @id @default(cuid())
  text          String   @db.Text()
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  file   File   @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId String
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}
